#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LuckyDraw.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RJBDB")]
	public partial class RjbDbLuckyDrawDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertPrize(Prize instance);
    partial void UpdatePrize(Prize instance);
    partial void DeletePrize(Prize instance);
    partial void InsertSweepstakeRecord(SweepstakeRecord instance);
    partial void UpdateSweepstakeRecord(SweepstakeRecord instance);
    partial void DeleteSweepstakeRecord(SweepstakeRecord instance);
    partial void InsertBidding(Bidding instance);
    partial void UpdateBidding(Bidding instance);
    partial void DeleteBidding(Bidding instance);
    partial void InsertLoan(Loan instance);
    partial void UpdateLoan(Loan instance);
    partial void DeleteLoan(Loan instance);
    partial void InsertSweepstake(Sweepstake instance);
    partial void UpdateSweepstake(Sweepstake instance);
    partial void DeleteSweepstake(Sweepstake instance);
    partial void InsertMemberInfo(MemberInfo instance);
    partial void UpdateMemberInfo(MemberInfo instance);
    partial void DeleteMemberInfo(MemberInfo instance);
    #endregion
		
		public RjbDbLuckyDrawDataContext() : 
				base(global::LuckyDraw.Properties.Settings.Default.RJBDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RjbDbLuckyDrawDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RjbDbLuckyDrawDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RjbDbLuckyDrawDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RjbDbLuckyDrawDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Member> Member
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<Prize> Prize
		{
			get
			{
				return this.GetTable<Prize>();
			}
		}
		
		public System.Data.Linq.Table<SweepstakeRecord> SweepstakeRecord
		{
			get
			{
				return this.GetTable<SweepstakeRecord>();
			}
		}
		
		public System.Data.Linq.Table<Bidding> Bidding
		{
			get
			{
				return this.GetTable<Bidding>();
			}
		}
		
		public System.Data.Linq.Table<Loan> Loan
		{
			get
			{
				return this.GetTable<Loan>();
			}
		}
		
		public System.Data.Linq.Table<Sweepstake> Sweepstake
		{
			get
			{
				return this.GetTable<Sweepstake>();
			}
		}
		
		public System.Data.Linq.Table<MemberInfo> MemberInfo
		{
			get
			{
				return this.GetTable<MemberInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MemberName;
		
		private string _PassWord;
		
		private string _TranPassWord;
		
		private string _Mobile;
		
		private string _Email;
		
		private System.Nullable<decimal> _Balance;
		
		private string _LastIP;
		
		private bool _IsDisable;
		
		private System.Nullable<System.DateTime> _RegTime;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private System.Nullable<bool> _IsLocked;
		
		private System.Nullable<System.DateTime> _LastLoginTime;
		
		private int _CreditPoint;
		
		private int _MemberPoint;
		
		private System.Nullable<int> _Times;
		
		private string _RecoCode;
		
		private System.Nullable<int> _Type;
		
		private int _CompleStatus;
		
		private int _MemberLevel;
		
		private System.Nullable<System.DateTime> _VIPStartTime;
		
		private System.Nullable<System.DateTime> _VIPEndTime;
		
		private string _Icon;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<bool> _IsCaringSms;
		
		private System.Nullable<int> _Channel;
		
		private string _ChannelRemark;
		
		private bool _AllowWithdraw;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMemberNameChanging(string value);
    partial void OnMemberNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnTranPassWordChanging(string value);
    partial void OnTranPassWordChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnLastIPChanging(string value);
    partial void OnLastIPChanged();
    partial void OnIsDisableChanging(bool value);
    partial void OnIsDisableChanged();
    partial void OnRegTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRegTimeChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnIsLockedChanging(System.Nullable<bool> value);
    partial void OnIsLockedChanged();
    partial void OnLastLoginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginTimeChanged();
    partial void OnCreditPointChanging(int value);
    partial void OnCreditPointChanged();
    partial void OnMemberPointChanging(int value);
    partial void OnMemberPointChanged();
    partial void OnTimesChanging(System.Nullable<int> value);
    partial void OnTimesChanged();
    partial void OnRecoCodeChanging(string value);
    partial void OnRecoCodeChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnCompleStatusChanging(int value);
    partial void OnCompleStatusChanged();
    partial void OnMemberLevelChanging(int value);
    partial void OnMemberLevelChanged();
    partial void OnVIPStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnVIPStartTimeChanged();
    partial void OnVIPEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnVIPEndTimeChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnIsCaringSmsChanging(System.Nullable<bool> value);
    partial void OnIsCaringSmsChanged();
    partial void OnChannelChanging(System.Nullable<int> value);
    partial void OnChannelChanged();
    partial void OnChannelRemarkChanging(string value);
    partial void OnChannelRemarkChanged();
    partial void OnAllowWithdrawChanging(bool value);
    partial void OnAllowWithdrawChanged();
    #endregion
		
		public Member()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(12) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this.OnMemberNameChanging(value);
					this.SendPropertyChanging();
					this._MemberName = value;
					this.SendPropertyChanged("MemberName");
					this.OnMemberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranPassWord", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TranPassWord
		{
			get
			{
				return this._TranPassWord;
			}
			set
			{
				if ((this._TranPassWord != value))
				{
					this.OnTranPassWordChanging(value);
					this.SendPropertyChanging();
					this._TranPassWord = value;
					this.SendPropertyChanged("TranPassWord");
					this.OnTranPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIP", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LastIP
		{
			get
			{
				return this._LastIP;
			}
			set
			{
				if ((this._LastIP != value))
				{
					this.OnLastIPChanging(value);
					this.SendPropertyChanging();
					this._LastIP = value;
					this.SendPropertyChanged("LastIP");
					this.OnLastIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RegTime
		{
			get
			{
				return this._RegTime;
			}
			set
			{
				if ((this._RegTime != value))
				{
					this.OnRegTimeChanging(value);
					this.SendPropertyChanging();
					this._RegTime = value;
					this.SendPropertyChanged("RegTime");
					this.OnRegTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastLoginTime
		{
			get
			{
				return this._LastLoginTime;
			}
			set
			{
				if ((this._LastLoginTime != value))
				{
					this.OnLastLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginTime = value;
					this.SendPropertyChanged("LastLoginTime");
					this.OnLastLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditPoint", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CreditPoint
		{
			get
			{
				return this._CreditPoint;
			}
			set
			{
				if ((this._CreditPoint != value))
				{
					this.OnCreditPointChanging(value);
					this.SendPropertyChanging();
					this._CreditPoint = value;
					this.SendPropertyChanged("CreditPoint");
					this.OnCreditPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberPoint", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MemberPoint
		{
			get
			{
				return this._MemberPoint;
			}
			set
			{
				if ((this._MemberPoint != value))
				{
					this.OnMemberPointChanging(value);
					this.SendPropertyChanging();
					this._MemberPoint = value;
					this.SendPropertyChanged("MemberPoint");
					this.OnMemberPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Times", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Times
		{
			get
			{
				return this._Times;
			}
			set
			{
				if ((this._Times != value))
				{
					this.OnTimesChanging(value);
					this.SendPropertyChanging();
					this._Times = value;
					this.SendPropertyChanged("Times");
					this.OnTimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecoCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string RecoCode
		{
			get
			{
				return this._RecoCode;
			}
			set
			{
				if ((this._RecoCode != value))
				{
					this.OnRecoCodeChanging(value);
					this.SendPropertyChanging();
					this._RecoCode = value;
					this.SendPropertyChanged("RecoCode");
					this.OnRecoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompleStatus", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CompleStatus
		{
			get
			{
				return this._CompleStatus;
			}
			set
			{
				if ((this._CompleStatus != value))
				{
					this.OnCompleStatusChanging(value);
					this.SendPropertyChanging();
					this._CompleStatus = value;
					this.SendPropertyChanged("CompleStatus");
					this.OnCompleStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberLevel", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MemberLevel
		{
			get
			{
				return this._MemberLevel;
			}
			set
			{
				if ((this._MemberLevel != value))
				{
					this.OnMemberLevelChanging(value);
					this.SendPropertyChanging();
					this._MemberLevel = value;
					this.SendPropertyChanged("MemberLevel");
					this.OnMemberLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIPStartTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> VIPStartTime
		{
			get
			{
				return this._VIPStartTime;
			}
			set
			{
				if ((this._VIPStartTime != value))
				{
					this.OnVIPStartTimeChanging(value);
					this.SendPropertyChanging();
					this._VIPStartTime = value;
					this.SendPropertyChanged("VIPStartTime");
					this.OnVIPStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIPEndTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> VIPEndTime
		{
			get
			{
				return this._VIPEndTime;
			}
			set
			{
				if ((this._VIPEndTime != value))
				{
					this.OnVIPEndTimeChanging(value);
					this.SendPropertyChanging();
					this._VIPEndTime = value;
					this.SendPropertyChanged("VIPEndTime");
					this.OnVIPEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCaringSms", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCaringSms
		{
			get
			{
				return this._IsCaringSms;
			}
			set
			{
				if ((this._IsCaringSms != value))
				{
					this.OnIsCaringSmsChanging(value);
					this.SendPropertyChanging();
					this._IsCaringSms = value;
					this.SendPropertyChanged("IsCaringSms");
					this.OnIsCaringSmsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Channel
		{
			get
			{
				return this._Channel;
			}
			set
			{
				if ((this._Channel != value))
				{
					this.OnChannelChanging(value);
					this.SendPropertyChanging();
					this._Channel = value;
					this.SendPropertyChanged("Channel");
					this.OnChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelRemark", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ChannelRemark
		{
			get
			{
				return this._ChannelRemark;
			}
			set
			{
				if ((this._ChannelRemark != value))
				{
					this.OnChannelRemarkChanging(value);
					this.SendPropertyChanging();
					this._ChannelRemark = value;
					this.SendPropertyChanged("ChannelRemark");
					this.OnChannelRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowWithdraw", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllowWithdraw
		{
			get
			{
				return this._AllowWithdraw;
			}
			set
			{
				if ((this._AllowWithdraw != value))
				{
					this.OnAllowWithdrawChanging(value);
					this.SendPropertyChanging();
					this._AllowWithdraw = value;
					this.SendPropertyChanged("AllowWithdraw");
					this.OnAllowWithdrawChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prize")]
	public partial class Prize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrizeId;
		
		private string _PrizeName;
		
		private int _PrizeNumber;
		
		private decimal _WinningRate;
		
		private decimal _IntervalTime;
		
		private int _SweepstakeId;
		
		private bool _PrizeDefault;
		
		private EntitySet<SweepstakeRecord> _SweepstakeRecord;
		
		private EntityRef<Sweepstake> _Sweepstake;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrizeIdChanging(int value);
    partial void OnPrizeIdChanged();
    partial void OnPrizeNameChanging(string value);
    partial void OnPrizeNameChanged();
    partial void OnPrizeNumberChanging(int value);
    partial void OnPrizeNumberChanged();
    partial void OnWinningRateChanging(decimal value);
    partial void OnWinningRateChanged();
    partial void OnIntervalTimeChanging(decimal value);
    partial void OnIntervalTimeChanged();
    partial void OnSweepstakeIdChanging(int value);
    partial void OnSweepstakeIdChanged();
    partial void OnPrizeDefaultChanging(bool value);
    partial void OnPrizeDefaultChanged();
    #endregion
		
		public Prize()
		{
			this._SweepstakeRecord = new EntitySet<SweepstakeRecord>(new Action<SweepstakeRecord>(this.attach_SweepstakeRecord), new Action<SweepstakeRecord>(this.detach_SweepstakeRecord));
			this._Sweepstake = default(EntityRef<Sweepstake>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrizeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PrizeId
		{
			get
			{
				return this._PrizeId;
			}
			set
			{
				if ((this._PrizeId != value))
				{
					this.OnPrizeIdChanging(value);
					this.SendPropertyChanging();
					this._PrizeId = value;
					this.SendPropertyChanged("PrizeId");
					this.OnPrizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrizeName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PrizeName
		{
			get
			{
				return this._PrizeName;
			}
			set
			{
				if ((this._PrizeName != value))
				{
					this.OnPrizeNameChanging(value);
					this.SendPropertyChanging();
					this._PrizeName = value;
					this.SendPropertyChanged("PrizeName");
					this.OnPrizeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrizeNumber", DbType="Int NOT NULL")]
		public int PrizeNumber
		{
			get
			{
				return this._PrizeNumber;
			}
			set
			{
				if ((this._PrizeNumber != value))
				{
					this.OnPrizeNumberChanging(value);
					this.SendPropertyChanging();
					this._PrizeNumber = value;
					this.SendPropertyChanged("PrizeNumber");
					this.OnPrizeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinningRate", DbType="Decimal(18,10) NOT NULL")]
		public decimal WinningRate
		{
			get
			{
				return this._WinningRate;
			}
			set
			{
				if ((this._WinningRate != value))
				{
					this.OnWinningRateChanging(value);
					this.SendPropertyChanging();
					this._WinningRate = value;
					this.SendPropertyChanged("WinningRate");
					this.OnWinningRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalTime", DbType="Decimal(18,2) NOT NULL")]
		public decimal IntervalTime
		{
			get
			{
				return this._IntervalTime;
			}
			set
			{
				if ((this._IntervalTime != value))
				{
					this.OnIntervalTimeChanging(value);
					this.SendPropertyChanging();
					this._IntervalTime = value;
					this.SendPropertyChanged("IntervalTime");
					this.OnIntervalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SweepstakeId", DbType="Int NOT NULL")]
		public int SweepstakeId
		{
			get
			{
				return this._SweepstakeId;
			}
			set
			{
				if ((this._SweepstakeId != value))
				{
					if (this._Sweepstake.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSweepstakeIdChanging(value);
					this.SendPropertyChanging();
					this._SweepstakeId = value;
					this.SendPropertyChanged("SweepstakeId");
					this.OnSweepstakeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrizeDefault", DbType="Bit NOT NULL")]
		public bool PrizeDefault
		{
			get
			{
				return this._PrizeDefault;
			}
			set
			{
				if ((this._PrizeDefault != value))
				{
					this.OnPrizeDefaultChanging(value);
					this.SendPropertyChanging();
					this._PrizeDefault = value;
					this.SendPropertyChanged("PrizeDefault");
					this.OnPrizeDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prize_SweepstakeRecord", Storage="_SweepstakeRecord", ThisKey="PrizeId", OtherKey="PrizeId")]
		public EntitySet<SweepstakeRecord> SweepstakeRecord
		{
			get
			{
				return this._SweepstakeRecord;
			}
			set
			{
				this._SweepstakeRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sweepstake_Prize", Storage="_Sweepstake", ThisKey="SweepstakeId", OtherKey="SweepstakeId", IsForeignKey=true)]
		public Sweepstake Sweepstake
		{
			get
			{
				return this._Sweepstake.Entity;
			}
			set
			{
				Sweepstake previousValue = this._Sweepstake.Entity;
				if (((previousValue != value) 
							|| (this._Sweepstake.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sweepstake.Entity = null;
						previousValue.Prize.Remove(this);
					}
					this._Sweepstake.Entity = value;
					if ((value != null))
					{
						value.Prize.Add(this);
						this._SweepstakeId = value.SweepstakeId;
					}
					else
					{
						this._SweepstakeId = default(int);
					}
					this.SendPropertyChanged("Sweepstake");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SweepstakeRecord(SweepstakeRecord entity)
		{
			this.SendPropertyChanging();
			entity.Prize = this;
		}
		
		private void detach_SweepstakeRecord(SweepstakeRecord entity)
		{
			this.SendPropertyChanging();
			entity.Prize = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SweepstakeRecord")]
	public partial class SweepstakeRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SweepstakeRecordId;
		
		private int _SweepstakeId;
		
		private int _MemberID;
		
		private System.Nullable<int> _PrizeId;
		
		private System.DateTime _CreateDate;
		
		private string _Mark;
		
		private EntityRef<Prize> _Prize;
		
		private EntityRef<Sweepstake> _Sweepstake;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSweepstakeRecordIdChanging(int value);
    partial void OnSweepstakeRecordIdChanged();
    partial void OnSweepstakeIdChanging(int value);
    partial void OnSweepstakeIdChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnPrizeIdChanging(System.Nullable<int> value);
    partial void OnPrizeIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnMarkChanging(string value);
    partial void OnMarkChanged();
    #endregion
		
		public SweepstakeRecord()
		{
			this._Prize = default(EntityRef<Prize>);
			this._Sweepstake = default(EntityRef<Sweepstake>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SweepstakeRecordId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SweepstakeRecordId
		{
			get
			{
				return this._SweepstakeRecordId;
			}
			set
			{
				if ((this._SweepstakeRecordId != value))
				{
					this.OnSweepstakeRecordIdChanging(value);
					this.SendPropertyChanging();
					this._SweepstakeRecordId = value;
					this.SendPropertyChanged("SweepstakeRecordId");
					this.OnSweepstakeRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SweepstakeId", DbType="Int NOT NULL")]
		public int SweepstakeId
		{
			get
			{
				return this._SweepstakeId;
			}
			set
			{
				if ((this._SweepstakeId != value))
				{
					if (this._Sweepstake.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSweepstakeIdChanging(value);
					this.SendPropertyChanging();
					this._SweepstakeId = value;
					this.SendPropertyChanged("SweepstakeId");
					this.OnSweepstakeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL")]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrizeId", DbType="Int")]
		public System.Nullable<int> PrizeId
		{
			get
			{
				return this._PrizeId;
			}
			set
			{
				if ((this._PrizeId != value))
				{
					if (this._Prize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrizeIdChanging(value);
					this.SendPropertyChanging();
					this._PrizeId = value;
					this.SendPropertyChanged("PrizeId");
					this.OnPrizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="NVarChar(50)")]
		public string Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prize_SweepstakeRecord", Storage="_Prize", ThisKey="PrizeId", OtherKey="PrizeId", IsForeignKey=true)]
		public Prize Prize
		{
			get
			{
				return this._Prize.Entity;
			}
			set
			{
				Prize previousValue = this._Prize.Entity;
				if (((previousValue != value) 
							|| (this._Prize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prize.Entity = null;
						previousValue.SweepstakeRecord.Remove(this);
					}
					this._Prize.Entity = value;
					if ((value != null))
					{
						value.SweepstakeRecord.Add(this);
						this._PrizeId = value.PrizeId;
					}
					else
					{
						this._PrizeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Prize");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sweepstake_SweepstakeRecord", Storage="_Sweepstake", ThisKey="SweepstakeId", OtherKey="SweepstakeId", IsForeignKey=true)]
		public Sweepstake Sweepstake
		{
			get
			{
				return this._Sweepstake.Entity;
			}
			set
			{
				Sweepstake previousValue = this._Sweepstake.Entity;
				if (((previousValue != value) 
							|| (this._Sweepstake.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sweepstake.Entity = null;
						previousValue.SweepstakeRecord.Remove(this);
					}
					this._Sweepstake.Entity = value;
					if ((value != null))
					{
						value.SweepstakeRecord.Add(this);
						this._SweepstakeId = value.SweepstakeId;
					}
					else
					{
						this._SweepstakeId = default(int);
					}
					this.SendPropertyChanged("Sweepstake");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bidding")]
	public partial class Bidding : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BidType;
		
		private int _MemberID;
		
		private System.Nullable<int> _LoanID;
		
		private System.Nullable<decimal> _BidAmount;
		
		private System.Nullable<int> _BidStatus;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<int> _CALoanID;
		
		private bool _IsTransfer;
		
		private decimal _DiscountAmount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBidTypeChanging(int value);
    partial void OnBidTypeChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnLoanIDChanging(System.Nullable<int> value);
    partial void OnLoanIDChanged();
    partial void OnBidAmountChanging(System.Nullable<decimal> value);
    partial void OnBidAmountChanged();
    partial void OnBidStatusChanging(System.Nullable<int> value);
    partial void OnBidStatusChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnCALoanIDChanging(System.Nullable<int> value);
    partial void OnCALoanIDChanged();
    partial void OnIsTransferChanging(bool value);
    partial void OnIsTransferChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    #endregion
		
		public Bidding()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidType", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int BidType
		{
			get
			{
				return this._BidType;
			}
			set
			{
				if ((this._BidType != value))
				{
					this.OnBidTypeChanging(value);
					this.SendPropertyChanging();
					this._BidType = value;
					this.SendPropertyChanged("BidType");
					this.OnBidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidAmount", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BidAmount
		{
			get
			{
				return this._BidAmount;
			}
			set
			{
				if ((this._BidAmount != value))
				{
					this.OnBidAmountChanging(value);
					this.SendPropertyChanging();
					this._BidAmount = value;
					this.SendPropertyChanged("BidAmount");
					this.OnBidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BidStatus
		{
			get
			{
				return this._BidStatus;
			}
			set
			{
				if ((this._BidStatus != value))
				{
					this.OnBidStatusChanging(value);
					this.SendPropertyChanging();
					this._BidStatus = value;
					this.SendPropertyChanged("BidStatus");
					this.OnBidStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CALoanID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CALoanID
		{
			get
			{
				return this._CALoanID;
			}
			set
			{
				if ((this._CALoanID != value))
				{
					this.OnCALoanIDChanging(value);
					this.SendPropertyChanging();
					this._CALoanID = value;
					this.SendPropertyChanged("CALoanID");
					this.OnCALoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTransfer", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsTransfer
		{
			get
			{
				return this._IsTransfer;
			}
			set
			{
				if ((this._IsTransfer != value))
				{
					this.OnIsTransferChanging(value);
					this.SendPropertyChanging();
					this._IsTransfer = value;
					this.SendPropertyChanged("IsTransfer");
					this.OnIsTransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loan")]
	public partial class Loan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MemberID;
		
		private string _LoanNumber;
		
		private System.Nullable<decimal> _LoanAmount;
		
		private System.Nullable<decimal> _LoanRate;
		
		private System.Nullable<decimal> _ReleasedRate;
		
		private System.Nullable<int> _LoanTerm;
		
		private System.Nullable<int> _RepaymentMethod;
		
		private System.Nullable<int> _BorrowMode;
		
		private System.Nullable<int> _TradeType;
		
		private System.Nullable<decimal> _BidAmountMin;
		
		private System.Nullable<decimal> _BidAmountMax;
		
		private System.Nullable<System.DateTime> _BidStratTime;
		
		private System.Nullable<System.DateTime> _BidEndTime;
		
		private System.Nullable<decimal> _Bond;
		
		private System.Nullable<int> _CityID;
		
		private System.Nullable<int> _ExamStatus;
		
		private decimal _BiddingProcess;
		
		private System.Nullable<int> _DimLoanUseID;
		
		private int _BidCount;
		
		private System.Nullable<int> _GuaranteeID;
		
		private System.Nullable<System.DateTime> _ReviewTime;
		
		private System.Nullable<System.DateTime> _RepaymentLastTime;
		
		private string _ContractNo;
		
		private System.Nullable<System.DateTime> _FullScaleTime;
		
		private System.Nullable<System.DateTime> _UnderTime;
		
		private System.Nullable<System.DateTime> _ContractGenerTime;
		
		private System.Nullable<bool> _NeedGuarantee;
		
		private System.Nullable<decimal> _GuaranteeFee;
		
		private System.Nullable<bool> _NeedLoanCharges;
		
		private System.Nullable<decimal> _LoanServiceCharges;
		
		private System.Nullable<bool> _NeedBidCharges;
		
		private System.Nullable<decimal> _BidServiceCharges;
		
		private string _LoanDescribe;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private decimal _AutoBidScale;
		
		private string _LoanTitle;
		
		private int _LoanTypeID;
		
		private string _AuthStatus;
		
		private bool _SwitchAutoRepayment;
		
		private bool _SwitchBuildOverdueFee;
		
		private bool _SwitchAutoPass;
		
		private string _AuthHistory;
		
		private System.Nullable<int> _SumScore;
		
		private string _ScoreLevel;
		
		private string _Agency;
		
		private string _LinkmanOne;
		
		private string _TelOne;
		
		private string _LinkmanTwo;
		
		private string _TelTwo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnLoanNumberChanging(string value);
    partial void OnLoanNumberChanged();
    partial void OnLoanAmountChanging(System.Nullable<decimal> value);
    partial void OnLoanAmountChanged();
    partial void OnLoanRateChanging(System.Nullable<decimal> value);
    partial void OnLoanRateChanged();
    partial void OnReleasedRateChanging(System.Nullable<decimal> value);
    partial void OnReleasedRateChanged();
    partial void OnLoanTermChanging(System.Nullable<int> value);
    partial void OnLoanTermChanged();
    partial void OnRepaymentMethodChanging(System.Nullable<int> value);
    partial void OnRepaymentMethodChanged();
    partial void OnBorrowModeChanging(System.Nullable<int> value);
    partial void OnBorrowModeChanged();
    partial void OnTradeTypeChanging(System.Nullable<int> value);
    partial void OnTradeTypeChanged();
    partial void OnBidAmountMinChanging(System.Nullable<decimal> value);
    partial void OnBidAmountMinChanged();
    partial void OnBidAmountMaxChanging(System.Nullable<decimal> value);
    partial void OnBidAmountMaxChanged();
    partial void OnBidStratTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBidStratTimeChanged();
    partial void OnBidEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBidEndTimeChanged();
    partial void OnBondChanging(System.Nullable<decimal> value);
    partial void OnBondChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnExamStatusChanging(System.Nullable<int> value);
    partial void OnExamStatusChanged();
    partial void OnBiddingProcessChanging(decimal value);
    partial void OnBiddingProcessChanged();
    partial void OnDimLoanUseIDChanging(System.Nullable<int> value);
    partial void OnDimLoanUseIDChanged();
    partial void OnBidCountChanging(int value);
    partial void OnBidCountChanged();
    partial void OnGuaranteeIDChanging(System.Nullable<int> value);
    partial void OnGuaranteeIDChanged();
    partial void OnReviewTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReviewTimeChanged();
    partial void OnRepaymentLastTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRepaymentLastTimeChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnFullScaleTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFullScaleTimeChanged();
    partial void OnUnderTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUnderTimeChanged();
    partial void OnContractGenerTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnContractGenerTimeChanged();
    partial void OnNeedGuaranteeChanging(System.Nullable<bool> value);
    partial void OnNeedGuaranteeChanged();
    partial void OnGuaranteeFeeChanging(System.Nullable<decimal> value);
    partial void OnGuaranteeFeeChanged();
    partial void OnNeedLoanChargesChanging(System.Nullable<bool> value);
    partial void OnNeedLoanChargesChanged();
    partial void OnLoanServiceChargesChanging(System.Nullable<decimal> value);
    partial void OnLoanServiceChargesChanged();
    partial void OnNeedBidChargesChanging(System.Nullable<bool> value);
    partial void OnNeedBidChargesChanged();
    partial void OnBidServiceChargesChanging(System.Nullable<decimal> value);
    partial void OnBidServiceChargesChanged();
    partial void OnLoanDescribeChanging(string value);
    partial void OnLoanDescribeChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnAutoBidScaleChanging(decimal value);
    partial void OnAutoBidScaleChanged();
    partial void OnLoanTitleChanging(string value);
    partial void OnLoanTitleChanged();
    partial void OnLoanTypeIDChanging(int value);
    partial void OnLoanTypeIDChanged();
    partial void OnAuthStatusChanging(string value);
    partial void OnAuthStatusChanged();
    partial void OnSwitchAutoRepaymentChanging(bool value);
    partial void OnSwitchAutoRepaymentChanged();
    partial void OnSwitchBuildOverdueFeeChanging(bool value);
    partial void OnSwitchBuildOverdueFeeChanged();
    partial void OnSwitchAutoPassChanging(bool value);
    partial void OnSwitchAutoPassChanged();
    partial void OnAuthHistoryChanging(string value);
    partial void OnAuthHistoryChanged();
    partial void OnSumScoreChanging(System.Nullable<int> value);
    partial void OnSumScoreChanged();
    partial void OnScoreLevelChanging(string value);
    partial void OnScoreLevelChanged();
    partial void OnAgencyChanging(string value);
    partial void OnAgencyChanged();
    partial void OnLinkmanOneChanging(string value);
    partial void OnLinkmanOneChanged();
    partial void OnTelOneChanging(string value);
    partial void OnTelOneChanged();
    partial void OnLinkmanTwoChanging(string value);
    partial void OnLinkmanTwoChanged();
    partial void OnTelTwoChanging(string value);
    partial void OnTelTwoChanged();
    #endregion
		
		public Loan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string LoanNumber
		{
			get
			{
				return this._LoanNumber;
			}
			set
			{
				if ((this._LoanNumber != value))
				{
					this.OnLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._LoanNumber = value;
					this.SendPropertyChanged("LoanNumber");
					this.OnLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanRate", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> LoanRate
		{
			get
			{
				return this._LoanRate;
			}
			set
			{
				if ((this._LoanRate != value))
				{
					this.OnLoanRateChanging(value);
					this.SendPropertyChanging();
					this._LoanRate = value;
					this.SendPropertyChanged("LoanRate");
					this.OnLoanRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleasedRate", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ReleasedRate
		{
			get
			{
				return this._ReleasedRate;
			}
			set
			{
				if ((this._ReleasedRate != value))
				{
					this.OnReleasedRateChanging(value);
					this.SendPropertyChanging();
					this._ReleasedRate = value;
					this.SendPropertyChanged("ReleasedRate");
					this.OnReleasedRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTerm", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LoanTerm
		{
			get
			{
				return this._LoanTerm;
			}
			set
			{
				if ((this._LoanTerm != value))
				{
					this.OnLoanTermChanging(value);
					this.SendPropertyChanging();
					this._LoanTerm = value;
					this.SendPropertyChanged("LoanTerm");
					this.OnLoanTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentMethod", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RepaymentMethod
		{
			get
			{
				return this._RepaymentMethod;
			}
			set
			{
				if ((this._RepaymentMethod != value))
				{
					this.OnRepaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._RepaymentMethod = value;
					this.SendPropertyChanged("RepaymentMethod");
					this.OnRepaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowMode", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BorrowMode
		{
			get
			{
				return this._BorrowMode;
			}
			set
			{
				if ((this._BorrowMode != value))
				{
					this.OnBorrowModeChanging(value);
					this.SendPropertyChanging();
					this._BorrowMode = value;
					this.SendPropertyChanged("BorrowMode");
					this.OnBorrowModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TradeType
		{
			get
			{
				return this._TradeType;
			}
			set
			{
				if ((this._TradeType != value))
				{
					this.OnTradeTypeChanging(value);
					this.SendPropertyChanging();
					this._TradeType = value;
					this.SendPropertyChanged("TradeType");
					this.OnTradeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidAmountMin", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BidAmountMin
		{
			get
			{
				return this._BidAmountMin;
			}
			set
			{
				if ((this._BidAmountMin != value))
				{
					this.OnBidAmountMinChanging(value);
					this.SendPropertyChanging();
					this._BidAmountMin = value;
					this.SendPropertyChanged("BidAmountMin");
					this.OnBidAmountMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidAmountMax", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BidAmountMax
		{
			get
			{
				return this._BidAmountMax;
			}
			set
			{
				if ((this._BidAmountMax != value))
				{
					this.OnBidAmountMaxChanging(value);
					this.SendPropertyChanging();
					this._BidAmountMax = value;
					this.SendPropertyChanged("BidAmountMax");
					this.OnBidAmountMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidStratTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> BidStratTime
		{
			get
			{
				return this._BidStratTime;
			}
			set
			{
				if ((this._BidStratTime != value))
				{
					this.OnBidStratTimeChanging(value);
					this.SendPropertyChanging();
					this._BidStratTime = value;
					this.SendPropertyChanged("BidStratTime");
					this.OnBidStratTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidEndTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> BidEndTime
		{
			get
			{
				return this._BidEndTime;
			}
			set
			{
				if ((this._BidEndTime != value))
				{
					this.OnBidEndTimeChanging(value);
					this.SendPropertyChanging();
					this._BidEndTime = value;
					this.SendPropertyChanged("BidEndTime");
					this.OnBidEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bond", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Bond
		{
			get
			{
				return this._Bond;
			}
			set
			{
				if ((this._Bond != value))
				{
					this.OnBondChanging(value);
					this.SendPropertyChanging();
					this._Bond = value;
					this.SendPropertyChanged("Bond");
					this.OnBondChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ExamStatus
		{
			get
			{
				return this._ExamStatus;
			}
			set
			{
				if ((this._ExamStatus != value))
				{
					this.OnExamStatusChanging(value);
					this.SendPropertyChanging();
					this._ExamStatus = value;
					this.SendPropertyChanged("ExamStatus");
					this.OnExamStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BiddingProcess", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal BiddingProcess
		{
			get
			{
				return this._BiddingProcess;
			}
			set
			{
				if ((this._BiddingProcess != value))
				{
					this.OnBiddingProcessChanging(value);
					this.SendPropertyChanging();
					this._BiddingProcess = value;
					this.SendPropertyChanged("BiddingProcess");
					this.OnBiddingProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimLoanUseID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DimLoanUseID
		{
			get
			{
				return this._DimLoanUseID;
			}
			set
			{
				if ((this._DimLoanUseID != value))
				{
					this.OnDimLoanUseIDChanging(value);
					this.SendPropertyChanging();
					this._DimLoanUseID = value;
					this.SendPropertyChanged("DimLoanUseID");
					this.OnDimLoanUseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int BidCount
		{
			get
			{
				return this._BidCount;
			}
			set
			{
				if ((this._BidCount != value))
				{
					this.OnBidCountChanging(value);
					this.SendPropertyChanging();
					this._BidCount = value;
					this.SendPropertyChanged("BidCount");
					this.OnBidCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuaranteeID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> GuaranteeID
		{
			get
			{
				return this._GuaranteeID;
			}
			set
			{
				if ((this._GuaranteeID != value))
				{
					this.OnGuaranteeIDChanging(value);
					this.SendPropertyChanging();
					this._GuaranteeID = value;
					this.SendPropertyChanged("GuaranteeID");
					this.OnGuaranteeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReviewTime
		{
			get
			{
				return this._ReviewTime;
			}
			set
			{
				if ((this._ReviewTime != value))
				{
					this.OnReviewTimeChanging(value);
					this.SendPropertyChanging();
					this._ReviewTime = value;
					this.SendPropertyChanged("ReviewTime");
					this.OnReviewTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentLastTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RepaymentLastTime
		{
			get
			{
				return this._RepaymentLastTime;
			}
			set
			{
				if ((this._RepaymentLastTime != value))
				{
					this.OnRepaymentLastTimeChanging(value);
					this.SendPropertyChanging();
					this._RepaymentLastTime = value;
					this.SendPropertyChanged("RepaymentLastTime");
					this.OnRepaymentLastTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullScaleTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FullScaleTime
		{
			get
			{
				return this._FullScaleTime;
			}
			set
			{
				if ((this._FullScaleTime != value))
				{
					this.OnFullScaleTimeChanging(value);
					this.SendPropertyChanging();
					this._FullScaleTime = value;
					this.SendPropertyChanged("FullScaleTime");
					this.OnFullScaleTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnderTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> UnderTime
		{
			get
			{
				return this._UnderTime;
			}
			set
			{
				if ((this._UnderTime != value))
				{
					this.OnUnderTimeChanging(value);
					this.SendPropertyChanging();
					this._UnderTime = value;
					this.SendPropertyChanged("UnderTime");
					this.OnUnderTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractGenerTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ContractGenerTime
		{
			get
			{
				return this._ContractGenerTime;
			}
			set
			{
				if ((this._ContractGenerTime != value))
				{
					this.OnContractGenerTimeChanging(value);
					this.SendPropertyChanging();
					this._ContractGenerTime = value;
					this.SendPropertyChanged("ContractGenerTime");
					this.OnContractGenerTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedGuarantee", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> NeedGuarantee
		{
			get
			{
				return this._NeedGuarantee;
			}
			set
			{
				if ((this._NeedGuarantee != value))
				{
					this.OnNeedGuaranteeChanging(value);
					this.SendPropertyChanging();
					this._NeedGuarantee = value;
					this.SendPropertyChanged("NeedGuarantee");
					this.OnNeedGuaranteeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuaranteeFee", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> GuaranteeFee
		{
			get
			{
				return this._GuaranteeFee;
			}
			set
			{
				if ((this._GuaranteeFee != value))
				{
					this.OnGuaranteeFeeChanging(value);
					this.SendPropertyChanging();
					this._GuaranteeFee = value;
					this.SendPropertyChanged("GuaranteeFee");
					this.OnGuaranteeFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedLoanCharges", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> NeedLoanCharges
		{
			get
			{
				return this._NeedLoanCharges;
			}
			set
			{
				if ((this._NeedLoanCharges != value))
				{
					this.OnNeedLoanChargesChanging(value);
					this.SendPropertyChanging();
					this._NeedLoanCharges = value;
					this.SendPropertyChanged("NeedLoanCharges");
					this.OnNeedLoanChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanServiceCharges", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> LoanServiceCharges
		{
			get
			{
				return this._LoanServiceCharges;
			}
			set
			{
				if ((this._LoanServiceCharges != value))
				{
					this.OnLoanServiceChargesChanging(value);
					this.SendPropertyChanging();
					this._LoanServiceCharges = value;
					this.SendPropertyChanged("LoanServiceCharges");
					this.OnLoanServiceChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedBidCharges", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> NeedBidCharges
		{
			get
			{
				return this._NeedBidCharges;
			}
			set
			{
				if ((this._NeedBidCharges != value))
				{
					this.OnNeedBidChargesChanging(value);
					this.SendPropertyChanging();
					this._NeedBidCharges = value;
					this.SendPropertyChanged("NeedBidCharges");
					this.OnNeedBidChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidServiceCharges", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BidServiceCharges
		{
			get
			{
				return this._BidServiceCharges;
			}
			set
			{
				if ((this._BidServiceCharges != value))
				{
					this.OnBidServiceChargesChanging(value);
					this.SendPropertyChanging();
					this._BidServiceCharges = value;
					this.SendPropertyChanged("BidServiceCharges");
					this.OnBidServiceChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDescribe", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string LoanDescribe
		{
			get
			{
				return this._LoanDescribe;
			}
			set
			{
				if ((this._LoanDescribe != value))
				{
					this.OnLoanDescribeChanging(value);
					this.SendPropertyChanging();
					this._LoanDescribe = value;
					this.SendPropertyChanged("LoanDescribe");
					this.OnLoanDescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoBidScale", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal AutoBidScale
		{
			get
			{
				return this._AutoBidScale;
			}
			set
			{
				if ((this._AutoBidScale != value))
				{
					this.OnAutoBidScaleChanging(value);
					this.SendPropertyChanging();
					this._AutoBidScale = value;
					this.SendPropertyChanged("AutoBidScale");
					this.OnAutoBidScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTitle", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LoanTitle
		{
			get
			{
				return this._LoanTitle;
			}
			set
			{
				if ((this._LoanTitle != value))
				{
					this.OnLoanTitleChanging(value);
					this.SendPropertyChanging();
					this._LoanTitle = value;
					this.SendPropertyChanged("LoanTitle");
					this.OnLoanTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTypeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LoanTypeID
		{
			get
			{
				return this._LoanTypeID;
			}
			set
			{
				if ((this._LoanTypeID != value))
				{
					this.OnLoanTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LoanTypeID = value;
					this.SendPropertyChanged("LoanTypeID");
					this.OnLoanTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthStatus", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AuthStatus
		{
			get
			{
				return this._AuthStatus;
			}
			set
			{
				if ((this._AuthStatus != value))
				{
					this.OnAuthStatusChanging(value);
					this.SendPropertyChanging();
					this._AuthStatus = value;
					this.SendPropertyChanged("AuthStatus");
					this.OnAuthStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchAutoRepayment", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SwitchAutoRepayment
		{
			get
			{
				return this._SwitchAutoRepayment;
			}
			set
			{
				if ((this._SwitchAutoRepayment != value))
				{
					this.OnSwitchAutoRepaymentChanging(value);
					this.SendPropertyChanging();
					this._SwitchAutoRepayment = value;
					this.SendPropertyChanged("SwitchAutoRepayment");
					this.OnSwitchAutoRepaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchBuildOverdueFee", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SwitchBuildOverdueFee
		{
			get
			{
				return this._SwitchBuildOverdueFee;
			}
			set
			{
				if ((this._SwitchBuildOverdueFee != value))
				{
					this.OnSwitchBuildOverdueFeeChanging(value);
					this.SendPropertyChanging();
					this._SwitchBuildOverdueFee = value;
					this.SendPropertyChanged("SwitchBuildOverdueFee");
					this.OnSwitchBuildOverdueFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchAutoPass", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SwitchAutoPass
		{
			get
			{
				return this._SwitchAutoPass;
			}
			set
			{
				if ((this._SwitchAutoPass != value))
				{
					this.OnSwitchAutoPassChanging(value);
					this.SendPropertyChanging();
					this._SwitchAutoPass = value;
					this.SendPropertyChanged("SwitchAutoPass");
					this.OnSwitchAutoPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthHistory", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string AuthHistory
		{
			get
			{
				return this._AuthHistory;
			}
			set
			{
				if ((this._AuthHistory != value))
				{
					this.OnAuthHistoryChanging(value);
					this.SendPropertyChanging();
					this._AuthHistory = value;
					this.SendPropertyChanged("AuthHistory");
					this.OnAuthHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumScore", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SumScore
		{
			get
			{
				return this._SumScore;
			}
			set
			{
				if ((this._SumScore != value))
				{
					this.OnSumScoreChanging(value);
					this.SendPropertyChanging();
					this._SumScore = value;
					this.SendPropertyChanged("SumScore");
					this.OnSumScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreLevel", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ScoreLevel
		{
			get
			{
				return this._ScoreLevel;
			}
			set
			{
				if ((this._ScoreLevel != value))
				{
					this.OnScoreLevelChanging(value);
					this.SendPropertyChanging();
					this._ScoreLevel = value;
					this.SendPropertyChanged("ScoreLevel");
					this.OnScoreLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agency", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Agency
		{
			get
			{
				return this._Agency;
			}
			set
			{
				if ((this._Agency != value))
				{
					this.OnAgencyChanging(value);
					this.SendPropertyChanging();
					this._Agency = value;
					this.SendPropertyChanged("Agency");
					this.OnAgencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkmanOne", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LinkmanOne
		{
			get
			{
				return this._LinkmanOne;
			}
			set
			{
				if ((this._LinkmanOne != value))
				{
					this.OnLinkmanOneChanging(value);
					this.SendPropertyChanging();
					this._LinkmanOne = value;
					this.SendPropertyChanged("LinkmanOne");
					this.OnLinkmanOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelOne", DbType="NVarChar(11)", UpdateCheck=UpdateCheck.Never)]
		public string TelOne
		{
			get
			{
				return this._TelOne;
			}
			set
			{
				if ((this._TelOne != value))
				{
					this.OnTelOneChanging(value);
					this.SendPropertyChanging();
					this._TelOne = value;
					this.SendPropertyChanged("TelOne");
					this.OnTelOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkmanTwo", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LinkmanTwo
		{
			get
			{
				return this._LinkmanTwo;
			}
			set
			{
				if ((this._LinkmanTwo != value))
				{
					this.OnLinkmanTwoChanging(value);
					this.SendPropertyChanging();
					this._LinkmanTwo = value;
					this.SendPropertyChanged("LinkmanTwo");
					this.OnLinkmanTwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelTwo", DbType="NVarChar(11)", UpdateCheck=UpdateCheck.Never)]
		public string TelTwo
		{
			get
			{
				return this._TelTwo;
			}
			set
			{
				if ((this._TelTwo != value))
				{
					this.OnTelTwoChanging(value);
					this.SendPropertyChanging();
					this._TelTwo = value;
					this.SendPropertyChanged("TelTwo");
					this.OnTelTwoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sweepstake")]
	public partial class Sweepstake : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SweepstakeId;
		
		private string _SweepstakeName;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _SweepstakeFactor;
		
		private System.Nullable<decimal> _Unit;
		
		private System.Nullable<decimal> _OutUnit;
		
		private EntitySet<Prize> _Prize;
		
		private EntitySet<SweepstakeRecord> _SweepstakeRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSweepstakeIdChanging(int value);
    partial void OnSweepstakeIdChanged();
    partial void OnSweepstakeNameChanging(string value);
    partial void OnSweepstakeNameChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnSweepstakeFactorChanging(int value);
    partial void OnSweepstakeFactorChanged();
    partial void OnUnitChanging(System.Nullable<decimal> value);
    partial void OnUnitChanged();
    partial void OnOutUnitChanging(System.Nullable<decimal> value);
    partial void OnOutUnitChanged();
    #endregion
		
		public Sweepstake()
		{
			this._Prize = new EntitySet<Prize>(new Action<Prize>(this.attach_Prize), new Action<Prize>(this.detach_Prize));
			this._SweepstakeRecord = new EntitySet<SweepstakeRecord>(new Action<SweepstakeRecord>(this.attach_SweepstakeRecord), new Action<SweepstakeRecord>(this.detach_SweepstakeRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SweepstakeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SweepstakeId
		{
			get
			{
				return this._SweepstakeId;
			}
			set
			{
				if ((this._SweepstakeId != value))
				{
					this.OnSweepstakeIdChanging(value);
					this.SendPropertyChanging();
					this._SweepstakeId = value;
					this.SendPropertyChanged("SweepstakeId");
					this.OnSweepstakeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SweepstakeName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SweepstakeName
		{
			get
			{
				return this._SweepstakeName;
			}
			set
			{
				if ((this._SweepstakeName != value))
				{
					this.OnSweepstakeNameChanging(value);
					this.SendPropertyChanging();
					this._SweepstakeName = value;
					this.SendPropertyChanged("SweepstakeName");
					this.OnSweepstakeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SweepstakeFactor", DbType="Int NOT NULL")]
		public int SweepstakeFactor
		{
			get
			{
				return this._SweepstakeFactor;
			}
			set
			{
				if ((this._SweepstakeFactor != value))
				{
					this.OnSweepstakeFactorChanging(value);
					this.SendPropertyChanging();
					this._SweepstakeFactor = value;
					this.SendPropertyChanged("SweepstakeFactor");
					this.OnSweepstakeFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutUnit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OutUnit
		{
			get
			{
				return this._OutUnit;
			}
			set
			{
				if ((this._OutUnit != value))
				{
					this.OnOutUnitChanging(value);
					this.SendPropertyChanging();
					this._OutUnit = value;
					this.SendPropertyChanged("OutUnit");
					this.OnOutUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sweepstake_Prize", Storage="_Prize", ThisKey="SweepstakeId", OtherKey="SweepstakeId")]
		public EntitySet<Prize> Prize
		{
			get
			{
				return this._Prize;
			}
			set
			{
				this._Prize.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sweepstake_SweepstakeRecord", Storage="_SweepstakeRecord", ThisKey="SweepstakeId", OtherKey="SweepstakeId")]
		public EntitySet<SweepstakeRecord> SweepstakeRecord
		{
			get
			{
				return this._SweepstakeRecord;
			}
			set
			{
				this._SweepstakeRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prize(Prize entity)
		{
			this.SendPropertyChanging();
			entity.Sweepstake = this;
		}
		
		private void detach_Prize(Prize entity)
		{
			this.SendPropertyChanging();
			entity.Sweepstake = null;
		}
		
		private void attach_SweepstakeRecord(SweepstakeRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sweepstake = this;
		}
		
		private void detach_SweepstakeRecord(SweepstakeRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sweepstake = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberInfo")]
	public partial class MemberInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MemberID;
		
		private string _RealName;
		
		private string _IdentityCard;
		
		private string _Sex;
		
		private System.Nullable<int> _Province;
		
		private System.Nullable<int> _City;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Telephone;
		
		private string _Fax;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnProvinceChanging(System.Nullable<int> value);
    partial void OnProvinceChanged();
    partial void OnCityChanging(System.Nullable<int> value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public MemberInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL")]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50)")]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this.OnRealNameChanging(value);
					this.SendPropertyChanging();
					this._RealName = value;
					this.SendPropertyChanged("RealName");
					this.OnRealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="VarChar(20)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(2)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="Int")]
		public System.Nullable<int> Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="Int")]
		public System.Nullable<int> City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
