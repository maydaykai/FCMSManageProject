#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SignCert.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qianzhang")]
	public partial class CfcaDataBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertTBL_EASTRACERT(TBL_EASTRACERT instance);
    partial void UpdateTBL_EASTRACERT(TBL_EASTRACERT instance);
    partial void DeleteTBL_EASTRACERT(TBL_EASTRACERT instance);
    #endregion
		
		public CfcaDataBaseDataContext() : 
				base(global::SignCert.Properties.Settings.Default.qianzhangConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CfcaDataBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CfcaDataBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CfcaDataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CfcaDataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBL_EASTRACERT> TBL_EASTRACERT
		{
			get
			{
				return this.GetTable<TBL_EASTRACERT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_EASTRACERT")]
	public partial class TBL_EASTRACERT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _REF;
		
		private string _AUTHCODE;
		
		private string _RESPONSEID;
		
		private System.Data.Linq.Binary _PKCS10;
		
		private System.Nullable<System.DateTime> _APPTIME;
		
		private System.Nullable<int> _VALIDINTERVAL;
		
		private string _USERNAME;
		
		private string _ORGNAME;
		
		private string _USERID;
		
		private string _IDNUM;
		
		private System.Nullable<int> _CERTTYPE;
		
		private System.Data.Linq.Binary _PFXCPNTENT;
		
		private string _PASSWORD;
		
		private System.Nullable<int> _CERTMODEL;
		
		private string _TEL;
		
		private string _MAIL;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnREFChanging(string value);
    partial void OnREFChanged();
    partial void OnAUTHCODEChanging(string value);
    partial void OnAUTHCODEChanged();
    partial void OnRESPONSEIDChanging(string value);
    partial void OnRESPONSEIDChanged();
    partial void OnPKCS10Changing(System.Data.Linq.Binary value);
    partial void OnPKCS10Changed();
    partial void OnAPPTIMEChanging(System.Nullable<System.DateTime> value);
    partial void OnAPPTIMEChanged();
    partial void OnVALIDINTERVALChanging(System.Nullable<int> value);
    partial void OnVALIDINTERVALChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnORGNAMEChanging(string value);
    partial void OnORGNAMEChanged();
    partial void OnUSERIDChanging(string value);
    partial void OnUSERIDChanged();
    partial void OnIDNUMChanging(string value);
    partial void OnIDNUMChanged();
    partial void OnCERTTYPEChanging(System.Nullable<int> value);
    partial void OnCERTTYPEChanged();
    partial void OnPFXCPNTENTChanging(System.Data.Linq.Binary value);
    partial void OnPFXCPNTENTChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnCERTMODELChanging(System.Nullable<int> value);
    partial void OnCERTMODELChanged();
    partial void OnTELChanging(string value);
    partial void OnTELChanged();
    partial void OnMAILChanging(string value);
    partial void OnMAILChanged();
    #endregion
		
		public TBL_EASTRACERT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF", DbType="VarChar(100)")]
		public string REF
		{
			get
			{
				return this._REF;
			}
			set
			{
				if ((this._REF != value))
				{
					this.OnREFChanging(value);
					this.SendPropertyChanging();
					this._REF = value;
					this.SendPropertyChanged("REF");
					this.OnREFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUTHCODE", DbType="VarChar(100)")]
		public string AUTHCODE
		{
			get
			{
				return this._AUTHCODE;
			}
			set
			{
				if ((this._AUTHCODE != value))
				{
					this.OnAUTHCODEChanging(value);
					this.SendPropertyChanging();
					this._AUTHCODE = value;
					this.SendPropertyChanged("AUTHCODE");
					this.OnAUTHCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESPONSEID", DbType="VarChar(50)")]
		public string RESPONSEID
		{
			get
			{
				return this._RESPONSEID;
			}
			set
			{
				if ((this._RESPONSEID != value))
				{
					this.OnRESPONSEIDChanging(value);
					this.SendPropertyChanging();
					this._RESPONSEID = value;
					this.SendPropertyChanged("RESPONSEID");
					this.OnRESPONSEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCS10", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PKCS10
		{
			get
			{
				return this._PKCS10;
			}
			set
			{
				if ((this._PKCS10 != value))
				{
					this.OnPKCS10Changing(value);
					this.SendPropertyChanging();
					this._PKCS10 = value;
					this.SendPropertyChanged("PKCS10");
					this.OnPKCS10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPTIME", DbType="DateTime")]
		public System.Nullable<System.DateTime> APPTIME
		{
			get
			{
				return this._APPTIME;
			}
			set
			{
				if ((this._APPTIME != value))
				{
					this.OnAPPTIMEChanging(value);
					this.SendPropertyChanging();
					this._APPTIME = value;
					this.SendPropertyChanged("APPTIME");
					this.OnAPPTIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALIDINTERVAL", DbType="Int")]
		public System.Nullable<int> VALIDINTERVAL
		{
			get
			{
				return this._VALIDINTERVAL;
			}
			set
			{
				if ((this._VALIDINTERVAL != value))
				{
					this.OnVALIDINTERVALChanging(value);
					this.SendPropertyChanging();
					this._VALIDINTERVAL = value;
					this.SendPropertyChanged("VALIDINTERVAL");
					this.OnVALIDINTERVALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(100)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORGNAME", DbType="VarChar(100)")]
		public string ORGNAME
		{
			get
			{
				return this._ORGNAME;
			}
			set
			{
				if ((this._ORGNAME != value))
				{
					this.OnORGNAMEChanging(value);
					this.SendPropertyChanging();
					this._ORGNAME = value;
					this.SendPropertyChanged("ORGNAME");
					this.OnORGNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="VarChar(35)")]
		public string USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNUM", DbType="VarChar(20)")]
		public string IDNUM
		{
			get
			{
				return this._IDNUM;
			}
			set
			{
				if ((this._IDNUM != value))
				{
					this.OnIDNUMChanging(value);
					this.SendPropertyChanging();
					this._IDNUM = value;
					this.SendPropertyChanged("IDNUM");
					this.OnIDNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CERTTYPE", DbType="Int")]
		public System.Nullable<int> CERTTYPE
		{
			get
			{
				return this._CERTTYPE;
			}
			set
			{
				if ((this._CERTTYPE != value))
				{
					this.OnCERTTYPEChanging(value);
					this.SendPropertyChanging();
					this._CERTTYPE = value;
					this.SendPropertyChanged("CERTTYPE");
					this.OnCERTTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PFXCPNTENT", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PFXCPNTENT
		{
			get
			{
				return this._PFXCPNTENT;
			}
			set
			{
				if ((this._PFXCPNTENT != value))
				{
					this.OnPFXCPNTENTChanging(value);
					this.SendPropertyChanging();
					this._PFXCPNTENT = value;
					this.SendPropertyChanged("PFXCPNTENT");
					this.OnPFXCPNTENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(20)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CERTMODEL", DbType="Int")]
		public System.Nullable<int> CERTMODEL
		{
			get
			{
				return this._CERTMODEL;
			}
			set
			{
				if ((this._CERTMODEL != value))
				{
					this.OnCERTMODELChanging(value);
					this.SendPropertyChanging();
					this._CERTMODEL = value;
					this.SendPropertyChanged("CERTMODEL");
					this.OnCERTMODELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEL", DbType="VarChar(50)")]
		public string TEL
		{
			get
			{
				return this._TEL;
			}
			set
			{
				if ((this._TEL != value))
				{
					this.OnTELChanging(value);
					this.SendPropertyChanging();
					this._TEL = value;
					this.SendPropertyChanged("TEL");
					this.OnTELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAIL", DbType="VarChar(50)")]
		public string MAIL
		{
			get
			{
				return this._MAIL;
			}
			set
			{
				if ((this._MAIL != value))
				{
					this.OnMAILChanging(value);
					this.SendPropertyChanging();
					this._MAIL = value;
					this.SendPropertyChanged("MAIL");
					this.OnMAILChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
